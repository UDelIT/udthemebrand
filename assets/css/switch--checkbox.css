.check-switch span::after,
button.ud-switch,
.knob, .knob::after,
[role="switch"][aria-checked="true"] {
  -webkit-transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);
}

.check-switch,
.switch {
/*   border: 1px solid #565656; */
  display: block;
  overflow: hidden;
  position: relative;
  height: 50px;
}

.switch {
  width: 100%;
  max-width: 300px;
  border-radius: 4px;
  overflow: hidden;
}

/* using the before/after pseudo elements of the span to create the "switch" */
.check-switch span::before,
.check-switch span::after {
  content: '';
  position: absolute;
/*   top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%); */
}

/*----------------------------------
	KNOB CIRCLE CSS
----------------------------------*/
.check-switch span::after {
  right: 1.5em;
  -webkit-transform: translate(-17px, 0px);
  transform: translate(-17px, 0px);
}

.check-switch span::after,
.switch--horizontal input  ~ .toggle-outside .toggle-inside::after,
.toggle-outside .toggle-inside::after {
  content: '';
  display: block;
  background: honeydew;
  border-radius: 50px;
  will-change:  transform;
  width: 35px;
  height: 35px;
  -webkit-transition: -webkit-transform 0.2s cubic-bezier(0.22, 0.38, 0, 1);
  transition: -webkit-transform 0.2s cubic-bezier(0.22, 0.38, 0, 1);
  transition: transform 0.2s cubic-bezier(0.22, 0.38, 0, 1);
  transition: transform 0.2s cubic-bezier(0.22, 0.38, 0, 1), -webkit-transform 0.3s cubic-bezier(0.22, 0.38, 0, 1);
  -webkit-transform-origin: center;
  transform-origin: center;
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .14), 0 3px 1px -2px rgba(0, 0, 0, .2), 0 1px 5px 0 rgba(0, 0, 0, .12), 0px 0px 10px 1px rgba(0, 0, 0, 0.42) inset;
}

input ~ input:checked ~ .toggle-outside .toggle-inside {
  -webkit-transform: translateX(42px);
  transform: translateX(42px);
}
/*----------------------------------
	PILL CONTAINER CSS
----------------------------------*/
.check-switch input + span::before {
  width: 80px;
}

.check-switch span::before {
  background: rgba(203,203,203,0.3);
  border-radius: 50px;
  right: .25em;
  height: 35px;
  -webkit-transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  width: 80px;
  box-shadow: inset -1px 1px 2px rgba(0,0,0,.23), inset 1px 0px 2px rgba(0,0,0,.23);
}

/* hide the actual checkbox from view, but not from keyboards or ATs.
   Instead of standard visually hidden styling, instead set opacity to
   almost 0 (not zero for ChomeVox legacy bug), pointer-events none, and
   then set to full height/width of container element so that VO focus
   ring outlines the component, instead of a tiny box within the component
*/
.check-switch input,
.switch input {
  height: 100%;
  left: 0;
  opacity: 0;
  position: absolute;
  top: 0;
  width: 100%;
  cursor: pointer;
}

.switch label {
  color: #333;
  cursor: pointer;
}

.switch--horizontal {
  font-size: 0;
}

.switch--horizontal input {
  height: inherit;
  width: 100px;
  left: 100px;
  margin: 0;
}

.switch--horizontal input:checked,
.switch--horizontal input ~ input:checked {
  -webkit-transition: -webkit-transform 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  transition: -webkit-transform 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  transition: transform 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  transition: transform 0.3s cubic-bezier(0.23, 1, 0.32, 1), -webkit-transform 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  box-shadow: 0 0 0 2px transparent,0 3px 3px #0000004d;
}
.switch--horizontal .toggle-outside,
.check-switch span::before {
  background: rgba(203,203,203,0.3);
  position: absolute;
  width: 80px;
  height: 35px;
  box-shadow: inset -1px 1px 2px rgba(0,0,0,.23), inset 1px 0px 2px rgba(0,0,0,.23);
  border-radius: 50px;
  overflow: hidden;
  -webkit-transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);
}

.switch--horizontal .toggle-outside {
  left: 109px;
}

.check-switch span::before {
  right: .25em;
}
.switch--horizontal .toggle-inside {
  height: 35px;
  width: 35px;
  margin: 0;
  position: absolute;
  cursor: pointer !important;
  -webkit-transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);
}

.check-switch.focus-within,
.switch.focus-within,
button.focus-within,
button:focus,
#ud-id-cf label:focus,
#ud-id-vh.color-off:focus label {
  outline: 2px dotted #609bfb !important;
  border-radius: 4px !important;
}
.check-switch input:not([role="button"]) {
  pointer-events: none;
}
.check-switch input:focus + span::before {
/*   outline: 2px solid; */
}
.check-switch input:checked + span::after,
.check-switch input:checked + div span::after,
.switch input:checked + span::after {
  will-change:  transform;
  -webkit-transition: -webkit-transform 0.2s cubic-bezier(0.22, 0.38, 0, 1);
  transition: -webkit-transform 0.2s cubic-bezier(0.22, 0.38, 0, 1);
  transition: transform 0.2s cubic-bezier(0.22, 0.38, 0, 1);
  transition: transform 0.2s cubic-bezier(0.22, 0.38, 0, 1), -webkit-transform 0.3s cubic-bezier(0.22, 0.38, 0, 1);
  -webkit-transform-origin: center;
  transform-origin: center;
  -webkit-transform: translate(22px, 0px);
  transform: translate(22px, 0px);
}

@media screen and (-ms-high-contrast: active) {
  .check-switch span::after {
    background-color: windowText;
  }
}
