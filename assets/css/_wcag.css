/**
  * UDTB SCREEN READERS CSS
  *
  * Defines all of the screen reader styles used in plugin dashboard and public facing pages.
  * Based off webAIM specification.
  *
  * @package     udtheme-brand
  * @subpackage  udtheme-brand/assets/css
  * @author      Christopher Leonard - University of Delaware
  * @license     GPLv3
  * @link        https://bitbucket.org/itcssdev/udtheme-brand
  * @copyright   Copyright (c) 2012-2018 University of Delaware
  * @version     3.5.0
*/
/*------------------------------------------------------------------------------
  7. @
    a. Hide visually and from screen readers.
    b. Hide only visually, but have it available for screen readers:
       https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
       http://rianrietveld.com/2015/04/04/the-screen-reader-text-class-why-and-how/

    c. For long content, line feeds are not interpreted as spaces and small
       width causes content to wrap 1 word per line:
       https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
    d. Extends the .visuallyhidden class to allow the element to be focusable
       when navigated to via the keyboard: https://www.drupal.org/node/897638
    e. Hide visually and from screen readers, but maintain layout
    f. Fix for screen readers interpreting white-space property forcing the
       content to render on one line.
       https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
    g. https://webaim.org/techniques/css/invisiblecontent/
    h. When thereâ€™s no JavaScript support or on small screens, screen-reader-text
       gets reset to make the visually hidden text visible again.
       https://make.wordpress.org/core/2017/10/22/changes-to-the-screen-reader-text-css-class-in-wordpress-4-9/
    i. Remove the default outline and add the outset shadow
    j. Make sure both the inset and outset shadow are present
------------------------------------------------------------------------------*/
.hidden,
[hidden],
[aria-hidden="true"] {
  display: none; /* a */
}

.screen-reader-text { /* b */
  border: 0;
  /* clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(0px 0px 99.9% 99.9%); */
  clip:rect(1px 1px 1px 1px);
  -webkit-clip-path:inset(50%);
  clip-path:inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute !important;
  width: 1px;
  word-wrap: normal !important;
  white-space: nowrap; /* c */
}

/* .no-js .screen-reader-text { /* h */
   /* position: static;
    -webkit-clip-path: none;
    clip-path: none;
    width: auto;
    height: auto;
    margin: 0;
} */

.screen-reader-text:active,
.screen-reader-text:focus { /* e */
  background-color: var(--light-gray);
  clip: auto !important;
  -webkit-clip-path: none;
  clip-path: none;
  color: #444;
  display: block;
  font-size: var(--size-root);
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000; /* Above WP toolbar. */
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
}

.invisible {
  visibility: hidden; /* e */
}

disabled {
  opacity:  0.6;
}

.screen-reader-text a,
.screen-reader-text a:focus,
.screen-reader-text a:hover,
.screen-reader-text a:visited {
  /* position: absolute !important;
  left: -999em; */
  position:static; /* g */
  width:auto;
  height:auto;
}
a:not([href]):not([tabindex]),
a:not([href]):not([tabindex]):hover,
a:not([href]):not([tabindex]):focus {
  color: inherit;
  text-decoration: none;
}

a:not([href]):not([tabindex]):focus {
  outline: 0;
}
/* i */
[aria-pressed]:focus {
  outline: none;
  box-shadow: 0 0 0 0.25rem yellow;
}

/* j */
[aria-pressed="true"]:focus {
  box-shadow: 0 0 0 0.25rem yellow,
              inset 0 0 0 0.15rem #000,
              inset 0.25em 0.25em 0 #fff;
}

[aria-required="true"] {
  /* border: red thin solid; */
}
@media only screen and (inverted-colors) {
 .no-inversion {
  -webkit-filter:invert(1);
  filter:invert(1)
 }
}
@media (-ms-high-contrast:active) {
  #active-on { display: block; }
  #active-off { display: none; }
}
@media (-ms-high-contrast:black-on-white) {
  #bow-on { display: block; }
  #bow-off { display: none; }
}
@media (-ms-high-contrast:white-on-black) {
  #wob-on { display: block; }
  #wob-off { display: none; }
}
/*   border: 1px solid transparent;
  box-shadow: 0px 6px 28px 0px rgba(51,51,51,0.5);
  https://css-tricks.com/accessible-svgs-high-contrast-mode/
    Text is mapped to windowText
    Link color is applied to <&#x200b;a> tags
    Selected text is mapped to highlightText and highlight
    Button Text is mapped to buttonFace
    Background is mapped to window */
@media (light-level: normal) {
    body {
        background: #EDEDED;
        color: #121212;
    }
}
@media (light-level: dim) {
    body {
        background: #666;
    }
}
@media (light-level: washed) {
    body {
        background: white;
    }
}
